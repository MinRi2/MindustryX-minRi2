From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: way-zer <himc.wicp@gmail.com>
Date: Tue, 9 Apr 2024 18:21:14 +0800
Subject: [PATCH] CS: MindustryX Version&Icon
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

不再发送ARC标识
way-zer <himc.wicp@gmail.com> on 2024/9/8
---
 .gitignore                                       |  1 +
 android/build.gradle                             |  4 ++--
 android/res/values/strings.xml                   |  2 +-
 build.gradle                                     |  2 +-
 core/build.gradle.kts                            |  2 +-
 core/src/mindustry/Vars.java                     |  2 +-
 core/src/mindustry/core/NetClient.java           |  1 +
 core/src/mindustry/core/Version.java             | 16 +++++++++++++++-
 core/src/mindustry/net/NetworkIO.java            |  2 +-
 .../src/mindustry/desktop/DesktopLauncher.java   |  2 +-
 gradle.properties                                |  3 +++
 11 files changed, 28 insertions(+), 9 deletions(-)

diff --git a/.gitignore b/.gitignore
index 7d91d3191096c431b739d2d5ecd951a764feead3..ba271e6bd0dd06971fff6fa2314254149cc90087 100644
--- a/.gitignore
+++ b/.gitignore
@@ -4,6 +4,7 @@ logs/
 /core/assets/mindustry-maps/
 /core/assets/bundles/output/
 /core/assets/.gifimages/
+/core/assets/MindustryX.hjson
 /deploy/
 /out/
 ios/libs/
diff --git a/android/build.gradle b/android/build.gradle
index 11f5fcf77dfc2e54ad1c18b183ad1957ff3dfe9a..23eb0e5b84894538ee19ee7fa437950622c56a2a 100644
--- a/android/build.gradle
+++ b/android/build.gradle
@@ -18,7 +18,7 @@ configurations{ natives }
 
 repositories{
     mavenCentral()
-    maven{ url "https://maven.google.com" }
+    maven{ url "https://dl.google.com/dl/android/maven2/" }
 }
 
 android{
@@ -46,7 +46,7 @@ android{
     defaultConfig{
         def versionNameResult = "$versionNumber-$versionType-${getBuildVersion().replace(" ", "-")}"
 
-        applicationId "io.anuke.mindustry"
+        applicationId "com.github.tinylake.mindustryX"
         minSdkVersion 14
         targetSdkVersion 34
         
diff --git a/android/res/values/strings.xml b/android/res/values/strings.xml
index d42ffe6d4a318ce558f1010eae46140f88ed5c99..bf44ead5c58abfb79c500e6daae30c3e7c322bed 100644
--- a/android/res/values/strings.xml
+++ b/android/res/values/strings.xml
@@ -1,4 +1,4 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name">Mindustry</string>
+    <string name="app_name">MindustryX</string>
 </resources>
diff --git a/build.gradle b/build.gradle
index 222ce1ed9b95d82b8244aaacc08247aa39ea9e22..e13f9df614deb5d24668053bf6e6ef0a417341bc 100644
--- a/build.gradle
+++ b/build.gradle
@@ -21,7 +21,7 @@ allprojects{
     apply plugin: 'maven-publish'
 
     version = project.hasProperty("packageVersion") ? project.getProperty("packageVersion") : 'release'
-    group = 'com.github.Anuken'
+    group = 'cf.wayzer.MindustryX'
 
     ext{
         versionNumber = '7'
diff --git a/core/build.gradle.kts b/core/build.gradle.kts
index 6dfb14b6bb9401ec083a0f6994ed9bab8b303c97..a68dd5cd58f7f012e3dd27750ae970b97c5bae6c 100644
--- a/core/build.gradle.kts
+++ b/core/build.gradle.kts
@@ -47,7 +47,7 @@ tasks{
         property("type", findProperty("versionType") ?: "official")
         property("modifier", findProperty("versionModifier") ?: "release")
         property("number", '7')
-        property("build", findProperty("buildversion") ?: "custom build")
+        property("build", findProperty("upstreamBuild") ?: "custom build")
     }
     processResources.configure {
         dependsOn(generateLocales, generateBasePartNames, writeVersion)
diff --git a/core/src/mindustry/Vars.java b/core/src/mindustry/Vars.java
index 7531b849b35dacbfcc188112614317ac5b54412f..55ffbe61ebc80920fa5be3af22d3f981e2022d9f 100644
--- a/core/src/mindustry/Vars.java
+++ b/core/src/mindustry/Vars.java
@@ -77,7 +77,7 @@ public class Vars implements Loadable{
     //TODO merge with v6 list upon release
     public static final String serverJsonURL = "https://raw.githubusercontent.com/Anuken/Mindustry/master/servers_v7.json";
     /** URL of the github issue report template.*/
-    public static final String reportIssueURL = "https://github.com/Anuken/Mindustry/issues/new?labels=bug&template=bug_report.md";
+    public static final String reportIssueURL = "https://github.com/TinyLake/MindustryX/issues/new?labels=bug&template=bug_report.md";
     /** list of built-in servers.*/
     public static final Seq<ServerGroup> defaultServers = Seq.with();
     /** maximum size of any block, do not change unless you know what you're doing */
diff --git a/core/src/mindustry/core/NetClient.java b/core/src/mindustry/core/NetClient.java
index d0e444a4a7a9ced372a2c93102860991ac922112..0948c4a880fe17643171857951722cd798248892 100644
--- a/core/src/mindustry/core/NetClient.java
+++ b/core/src/mindustry/core/NetClient.java
@@ -135,6 +135,7 @@ public class NetClient implements ApplicationListener{
             Log.info("Received world data: @ bytes.", data.stream.available());
             NetworkIO.loadWorld(new InflaterInputStream(data.stream));
 
+            Call.serverPacketReliable("MDTX", Version.mdtXBuild);
             finishConnecting();
         });
     }
diff --git a/core/src/mindustry/core/Version.java b/core/src/mindustry/core/Version.java
index 73bbd59416cc8e1b64bcb5538fdd73886a455451..93da9d60feda92b04c60e649b0db0b2a6e33f3f9 100644
--- a/core/src/mindustry/core/Version.java
+++ b/core/src/mindustry/core/Version.java
@@ -6,6 +6,8 @@ import arc.files.*;
 import arc.struct.*;
 import arc.util.*;
 import arc.util.io.*;
+import arc.util.serialization.*;
+import mindustryX.*;
 
 public class Version{
     /** Build type. 'official' for official releases; 'custom' or 'bleeding edge' are also used. */
@@ -20,6 +22,8 @@ public class Version{
     public static int revision = 0;
     /** Whether version loading is enabled. */
     public static boolean enabled = true;
+    @MindustryXApi
+    public static String mdtXBuild;
 
     public static void init(){
         if(!enabled) return;
@@ -44,6 +48,15 @@ public class Version{
         }else{
             build = Strings.canParseInt(map.get("build")) ? Integer.parseInt(map.get("build")) : -1;
         }
+        //MDTX: mdtXBuild
+        if(Core.files == null) return;
+        try{
+            Jval meta = Jval.read(Core.files.internal("mod.hjson").readString());
+            mdtXBuild = meta.getString("version");
+        }catch(Throwable e){
+            e.printStackTrace();
+            mdtXBuild = "custom build";
+        }
     }
 
     /** @return whether the current game version is greater than the specified version string, e.g. "120.1"*/
@@ -73,6 +86,7 @@ public class Version{
         if(build == -1){
             return "custom build";
         }
-        return (type.equals("official") ? modifier : type) + " build " + build + (revision == 0 ? "" : "." + revision);
+        return (type.equals("official") ? modifier : type) + " build " + build + (revision == 0 ? "" : "." + revision) +
+        "\nMindustryX " + mdtXBuild;
     }
 }
diff --git a/core/src/mindustry/net/NetworkIO.java b/core/src/mindustry/net/NetworkIO.java
index 48599c6b96474117057e7ca2b87b545873a0ea31..4366eeef830845fb13132a0ae3534129b7a859dc 100644
--- a/core/src/mindustry/net/NetworkIO.java
+++ b/core/src/mindustry/net/NetworkIO.java
@@ -107,7 +107,7 @@ public class NetworkIO{
         buffer.putInt(Core.settings.getInt("totalPlayers", Groups.player.size()));
         buffer.putInt(state.wave);
         buffer.putInt(Version.build);
-        writeString(buffer, Version.type);
+        writeString(buffer, "MindustryX");
 
         buffer.put((byte)state.rules.mode().ordinal());
         buffer.putInt(netServer.admins.getPlayerLimit());
diff --git a/desktop/src/mindustry/desktop/DesktopLauncher.java b/desktop/src/mindustry/desktop/DesktopLauncher.java
index 2500d18e59a325d6f1a6286d4f0d214d65a78402..eba453ade66d5e72f44726f64a28a0577ef6ef87 100644
--- a/desktop/src/mindustry/desktop/DesktopLauncher.java
+++ b/desktop/src/mindustry/desktop/DesktopLauncher.java
@@ -62,7 +62,7 @@ public class DesktopLauncher extends ClientLauncher{
                         }
                     }
                 }
-                setWindowIcon(FileType.internal, "icons/icon_64.png");
+                setWindowIcon(FileType.internal, "icon.png");
             }});
         }catch(Throwable e){
             handleCrash(e);
diff --git a/gradle.properties b/gradle.properties
index 555cef4a0b5882c7e10d0a8102ae1cf329aabfd2..de5f63833275548e5e7455ef21a8f54e1c872819 100644
--- a/gradle.properties
+++ b/gradle.properties
@@ -27,3 +27,6 @@ org.gradle.internal.http.socketTimeout=100000
 org.gradle.internal.http.connectionTimeout=100000
 android.enableR8.fullMode=false
 archash=f2ffd0e34f
+
+upstreamBuild=25298
+versionType=bleeding-edge
\ No newline at end of file
